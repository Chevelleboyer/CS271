// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[11..13], a=dm1, b=dm2, c=dm3, d=dm4, e=dm5, f=dm6, g=dm7, h=dm8);
    RAM4K(in=in, load=dm1, address=address[0..11], out=ram1out);
    RAM4K(in=in, load=dm2, address=address[0..11], out=ram2out);
    RAM4K(in=in, load=dm3, address=address[0..11], out=ram3out);
    RAM4K(in=in, load=dm4, address=address[0..11], out=ram4out);
    RAM4K(in=in, load=dm5, address=address[0..11], out=ram5out);
    RAM4K(in=in, load=dm6, address=address[0..11], out=ram6out);
    RAM4K(in=in, load=dm7, address=address[0..11], out=ram7out);
    RAM4K(in=in, load=dm8, address=address[0..11], out=ram8out);
    Mux8Way16(a=ram1out, b=ram2out, c=ram3out, d=ram4out, e=ram5out, f=ram6out, g=ram7out, h=ram8out, sel=address[11..13], out=out);
}